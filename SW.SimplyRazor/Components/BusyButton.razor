@namespace SW.SimplyRazor
@implements IBusyButton
@inject NotifyService notify

<button disabled="@busy" type="button" @onclick="ButtonOnClick" @attributes="UnmatchedAttributes">
    @if (busy && BusyTitle == null)
    {
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
    }
    else if (busy)
    {
        @BusyTitle
    }
    else
    {
        @Title
    }
</button>

@if (busy && IfBusy != null)
{
    @IfBusy(this)
}

@code {

    bool busy;

    [Parameter]
    public EventCallback<IBusyButton> OnClick { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; }

    [Parameter]
    public RenderFragment BusyTitle { get; set; }

    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment<IBusyButton> IfBusy { get; set; }

    async Task ButtonOnClick(EventArgs args)
    {
        busy = true;
        await OnClick.InvokeAsync(this);
    }

    async public Task SetBusy(bool busy)
    {
        this.busy = busy;
        await InvokeAsync(() => StateHasChanged());
    }
}
