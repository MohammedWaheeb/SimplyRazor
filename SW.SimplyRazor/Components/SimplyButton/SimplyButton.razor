@namespace SW.SimplyRazor
@inject NotifyService notify

<button disabled="@working" type="button" @onclick="ButtonOnClick" @attributes="UnmatchedAttributes">
    @if (working)
    {
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
    }
    else
    {
        @ChildContent
    }
</button>

@code {

    bool clicked;


    bool working;

    [Parameter]
    public object Value { get; set; }

    [Parameter]
    public EventCallback<object> OnClick { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }



    protected override void OnInitialized()
    {
    }

    async Task ButtonOnClick(EventArgs args)
    {
        try
        {
            working = true;
            await OnClick.InvokeAsync(Value);
            working = false;
            clicked = true;
        }
        catch (Exception ex)
        {
            await notify.Publish(new UserMessage { Body = ex.Message, Level = AttentionLevel.Error });
        }
    }
}
