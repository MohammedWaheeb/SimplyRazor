@page "/form2"
@inject NavigationManager navigationManager

<SimplyAlertHub></SimplyAlertHub>

<SimplyQuery QueryUrl="@($"employees/5")" OnResult="OnQueryResult" TResponse="Employee">
    <Result>
        <SimplyForm @bind-Value="context">

            <SimplyTabs >

                <Tab Title="General">
                    <div class="row">
                        <div class="col-md-6">
                            <Field Name="FirstName" Text=""></Field>
                        </div>
                        <div class="col-md-6">
                            <Field Name="LastName" Text=""></Field>
                        </div>
                    </div>
                    <Field Name="FirstName" InputType="InputType.Multiline" ReadOnly="true"></Field>
                    <Field Name="LastName" ReadOnly="true"></Field>

                    <Field Name="@nameof(Employee.Age)" Default="20" Format="#.#" />
                    <div>test</div>
                    <Field Name="Married" />
                    <Field Name="EmploymentDate" InputType="InputType.DateCalendar" />

                    <Field Name="EmploymentStatus" Lookup="mockmodels" ReadOnly="true" />
                    <Field Name="Country" Lookup="countries" TypeAhead="3" ReadOnly="true" />
                    <Field Name="Country" Lookup="countries" ReadOnly="true" />
                    <Field Name="Roles" Lookup="countries"></Field>

                    <Field Name="Roles" InputType="InputType.Multiline"></Field>


                </Tab>
                <Tab Title="Album">

                    <Field Name="Photo" />
                    <Field Name="Photos" />

                </Tab>


                <Tab Title="Properties">

                    <Field Name="AdditionalValues"></Field>

                </Tab>
                <Tab Title="Salary">

                    <Field Name="Salary.Amount" />
                    <Field Name="Salary.Currency" />

                </Tab>

                <Tab Title="Leaves">
                    <Subform Name="Leaves">
                        <Columns>
                            <Field Text="Action">
                                <ColumnHeader Context="fieldContext">
                                    Action (<a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("add", null))">add</a>)
                                </ColumnHeader>
                                <ColumnValue Context="fieldContext">
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("remove", fieldContext.Model))">Remove</a>
                                    <a href="JavaScript:void(0);" @onclick="@(() => fieldContext.Action.Invoke("edit", fieldContext.Model))">Edit</a>
                                </ColumnValue>
                            </Field>
                            <Field Name="Reason" />
                            <Field Name="Days" />
                            <Field Name="Photo"   />
                        </Columns>
                        <Form>
                            <Field Name="Photo" accept="image/*" size="1000000" />

                            <Field Name="Reason" />
                            <Field Name="Days" />
                        </Form>
                    </Subform>

                </Tab>
            </SimplyTabs>
        </SimplyForm>

        <div class="container-fluid mt-5">
            <SimplyCommand Title="Save" Confirm="true" CommandUrl="employees/5" Request="context" OnResult="OnSaveResult" class="btn btn-secondary" />
        </div>

        <p>Age: @context?.Age</p>
        <p>Emp Status: @context?.EmploymentStatus</p>
        <p>Country: @context?.Country</p>
        <p>Photo: @context?.Photo</p>
    </Result>
</SimplyQuery>
@code {

    Employee employee;
    bool ready;

    void OnSaveResult(ApiResult apiResult)
    {
        if (apiResult.Success)
            navigationManager.NavigateTo("/");
    }

    void OnQueryResult(ApiResult<Employee> apiResult)
    {
        if (apiResult.Success)
        {
            employee = apiResult.Response;
            //employee.Leaves = new List<Leave>();
            //{
            //    new Leave
            //    {
            //        Days = 1,
            //        Reason = "test"
            //    }
            //};
            employee.Roles = new List<string>
            {
                "JO"
            };
            employee.Age = decimal.Parse("5.10000"); 
            ready = true;
        }
    }

}
