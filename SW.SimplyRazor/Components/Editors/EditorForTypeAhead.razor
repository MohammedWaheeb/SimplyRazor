@namespace SW.SimplyRazor

@if (!string.IsNullOrEmpty(State.Text))
{
    <label for="@State.Id">@State.Text</label>
}

<SimplyChoices Id="@State.Id"
               Lookup="@State.Lookup"
               TypeAhead="@State.TypeAhead.Value"
               Value="@State.Value?.ToString()"
               ValueChanged=" (value) =>  ValueChanged.InvokeAsync(value)"
               Disabled="State.ReadOnly"
               Placeholder="@State.Placeholder"
               @attributes="UnmatchedAttributes"></SimplyChoices>

@code {

    [Parameter]
    public EventCallback<object> ValueChanged { get; set; }

    [Parameter]
    public IField State { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; }

}
