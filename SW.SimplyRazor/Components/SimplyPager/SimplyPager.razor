@namespace SW.SimplyRazor
@inject NotifyService notify

<SimplyNotify Notification="DatalistReady" OnReceived="HandleDatalistReady" />

<div>
    @if (Count > 0)
    {
        <ul class="pagination">
            <li class="page-item ">
                <button disabled="@(CurrentPage <= 0 ? "disabled" : null)" @onclick="(()=>ChangePage(0))" type="button" class="page-link">First</button>
            </li>
            <li class="page-item ">
                <button disabled="@(CurrentPage <= 0 ? "disabled" : null)" @onclick="(()=>ChangePage(CurrentPage-1))" type="button" class="page-link">Previous</button>
            </li>
            <li class="page-item ">
                <button disabled="@(Count == PageSize || CurrentPage < totalPages ? null : "disbaled")" @onclick="(()=>ChangePage(CurrentPage+1))" type="button" class="page-link">Next</button>
            </li>
            @if (totalPages > 0)
            {
                <li class="page-item ">
                    <button @onclick="(()=>ChangePage(totalPages-1))" type="button" class="page-link">Last</button>
                </li>
            }

        </ul>
    }
</div>

@*
    disabled="@(CurrentPage < totalPages ? null : "disbaled")"*@
@code {

    [Parameter]
    public int CurrentPage { get; set; }

    [Parameter]
    public EventCallback<int> OnCurrentPageChanged { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int Count { get; set; }

    [Parameter]
    public int TotalCount { get; set; }

    int totalPages => (PageSize == 0) ? 0 : (int)Math.Ceiling(decimal.Divide(TotalCount, PageSize));

    async Task ChangePage(int page)
    {
        await notify.Publish(new PageIndexRequested { Index = page });
    }

    async Task HandleDatalistReady(DatalistReady data)
    {
        CurrentPage = data.PageIndex;
        TotalCount = data.TotalCount;
        Count = data.Count;
        PageSize = data.PageSize;
        await OnCurrentPageChanged.InvokeAsync(CurrentPage);
    }

}
