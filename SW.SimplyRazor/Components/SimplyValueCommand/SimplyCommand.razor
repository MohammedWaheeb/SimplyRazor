@namespace SW.SimplyRazor

@if (ChildContent == null)
{
    <SimplyValueCommand Title="@Title"
                        OnResult="OnValueCommandResult"
                        Confirm="Confirm"
                        TResponse="NoT"
                        CommandUrl="@CommandUrl"
                        Method="Method"
                        Request="Request"
                        UnmatchedAttributes="UnmatchedAttributes"
                         />
}
else
{
    <SimplyValueCommand Title="@Title"
                        OnResult="OnValueCommandResult"
                        Confirm="Confirm"
                        TResponse="NoT"
                        CommandUrl="@CommandUrl"
                        Method="Method"
                        Request="Request"
                        UnmatchedAttributes="UnmatchedAttributes"
                        ChildContent="ChildContent" />
}



@code {

    [Parameter]
    public string CommandUrl { get; set; }

    [Parameter]
    public object Request { get; set; }

    [Parameter]
    public EventCallback<ApiResult> OnResult { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; }

    [Parameter]
    public ApiMethod Method { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public bool Confirm { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    async Task OnValueCommandResult(ApiResult<NoT> apiResult)
    {
        await OnResult.InvokeAsync(new ApiResult
        {
            StatusCode = apiResult.StatusCode,
            StatusText = apiResult.StatusText,
            Success = apiResult.Success
        });
    }


}
