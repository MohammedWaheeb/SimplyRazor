@namespace SW.SimplyRazor

<label for="@State.Id">@State.Text</label>
<input id="@State.Id"
       value="@State.Value"
       type="@inputType"
       class="form-control @((State.IsInvalid ? "is-invalid" : null))"
       form="@State.FormId"
       @onchange="(e)=> ValueChanged.InvokeAsync(e.Value)"
       @attributes="UnmatchedAttributes" />

@code {

    [Parameter]
    public EventCallback<object> ValueChanged { get; set; }

    [Parameter]
    public ISimplyField State { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> UnmatchedAttributes { get; set; }

    string inputType;

    protected override void  OnInitialized()
    {
        if (State.PropertyInfo.PropertyType == typeof(int))
        {
            inputType = "number";
        }
        else inputType = "text";
    }

}
