@page "/form2"
@inject NavigationManager navigationManager

<SimplyAlertHub></SimplyAlertHub>

<SimplyQuery QueryUrl="@($"employees/5")" OnResult="OnQueryResult" TResponse="Employee" />

<SimplyReady @bind-Ready="ready">

    <SimplyForm @bind-Value="employee">

        <SimplyTabs>

            <Tab Title="General">

                <Field Name="FirstName" InputType="InputType.Multiline" ReadOnly="true"></Field>
                <Field Name="LastName" ReadOnly="true"></Field>

                <Field Name="@nameof(Employee.Age)" />
                <div>test</div>
                <Field Name="Married" />
                <Field Name="EmploymentStatus" Lookup="mockmodels" ReadOnly="true" />
                <Field Name="Country" Lookup="countries" TypeAhead="3" ReadOnly="true" />
                <Field Name="Country" Lookup="countries" TypeAhead="3" />
                <Field Name="Roles" Lookup="countries"></Field>


            </Tab>
            <Tab Title="Album">

                <Field Name="Photo" />
                <Field Name="Photos" />

            </Tab>


            <Tab Title="Properties">

                <Field Name="AdditionalValues"></Field>

            </Tab>
            <Tab Title="Salary">

                <Field Name="Salary.Amount" />
                <Field Name="Salary.Currency" />

            </Tab>

            <Tab Title="Leaves">
                <Subform Name="Leaves">
                    <Columns>
                        <Field Text="Action">
                            <ColumnValue>
                                <button type="button" class="btn btn-link" @onclick="@(() => context.Action.Invoke("remove", context.Model))">Remove</button>
                                <button type="button" class="btn btn-link" @onclick="@(() => context.Action.Invoke("edit", context.Model))">Edit</button>
                            </ColumnValue>
                        </Field>
                        <Field Name="Reason" />
                        <Field Name="Days" />
                    </Columns>
                    <Form>
                        <Field Name="Reason" />
                        <Field Name="Days" />
                    </Form>
                </Subform>

            </Tab>
        </SimplyTabs>
    </SimplyForm>

    @*<SimplyTable @bind-Value="employee.Leaves">
        <Columns>
            <Field Text="Action">
                <ColumnValue>
                    <button type="button" class="btn btn-link" @onclick="@(() => context.Action.Invoke("remove", context.Model))">Remove</button>
                    <button type="button" class="btn btn-link" @onclick="@(() => context.Action.Invoke("edit", context.Model))">Edit</button>
                </ColumnValue>
            </Field>
            <Field Name="Reason" />
            <Field Name="Days" />
        </Columns>
        <Form>
            <Field Name="Reason" />
            <Field Name="Days" />
        </Form>
    </SimplyTable>*@



    <div class="container-fluid mt-5">
        <SimplyCommand Title="Save" Confirm="true" CommandUrl="employees/5" Request="employee" OnResult="OnSaveResult" class="btn btn-secondary" />
    </div>

    <p>Age: @employee?.Age</p>
    <p>Emp Status: @employee?.EmploymentStatus</p>
    <p>Country: @employee?.Country</p>
    <p>Photo: @employee?.Photo</p>

</SimplyReady>

@code {

    Employee employee;
    bool ready;

    void OnSaveResult(ApiResult apiResult)
    {
        if (apiResult.Success)
            navigationManager.NavigateTo("/");
    }

    void OnQueryResult(ApiResult<Employee> apiResult)
    {
        if (apiResult.Success)
        {
            employee = apiResult.Response;
            employee.Leaves = new List<Leave>
            {
                new Leave
                {
                    Days = 1,
                    Reason = "test"
                }
            };
            employee.Roles = new List<string>
            {
                "JO"
            };
            ready = true;
        }
    }

}
