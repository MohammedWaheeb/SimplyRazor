@page "/"
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime
@inject IServiceProvider serviceProvider
@inject ScopedState scopedState 
@*<AlertHub></AlertHub>*@

<Search PageSize="10" @bind-Value="scopedState[navigationManager.Uri]"  SearchUrl="employees" OnItem="OnItem" TModel="Employee" Height="200px" Width="max-content">
    <Commands>
        <button class="btn btn-primary" type="button" @onclick="() => OnExportToExcel(context.SearchyRequest)">Export</button>
        <a href="form2">
            New Employee
        </a>
    </Commands>
    <Filters>
        <Field Name="Id" Text="Id" Required="true"></Field>
        <Field Name="EmploymentDate" Required="true"></Field>
    </Filters>
    <Columns>
        <Field Name="Id" Text="Id">
            <ColumnValue>
                <a @onclick="@(() => context.Action.Invoke("s", "s"))">Edit</a>
            </ColumnValue>
        </Field>
        <Field Name="FirstName" />
        <Field Name="LastName" />
        <Field Name="Age" />
        <Field Name="EmploymentDate" />
        <Field Name="Married" />
        <Field Name="EmploymentStatus" />
        <Field Name="Country" />
        <Field Name="Salary.Amount" />
        <Field Name="Salary.Currency" />
    </Columns>
</Search>

@code{

    SearchyRequest search;

    protected override void OnInitialized()
    {
        //search = scopedState.GetOrDefault(navigationManager.Uri, new SearchyRequest()); //SearchyRequestExtensions.FromQueryString(new Uri(navigationManager.Uri).Query);
    }

    void OnSearchValueChanged(SearchyRequest value)
    {
        //scopedState.Set(navigationManager.Uri, value);
        //search = value;
        //navigationManager.NavigateTo($"{new Uri(navigationManager.Uri).AbsolutePath}?{value.ToString()}");
        //search = value;
        }

    async Task OnExportToExcel(SearchyRequest searchyRequest)
    {
        var apiClient = serviceProvider.GetApiClient();
        //var result = await apiClient.PostAsync<RemoteBlob>(actionValue.ToString(), searchRequest);

        //if (result.Success)
        //{
        //    await JSRuntime.DownloadFile(result.Response.Location, result.Response.Name);
        //}
    }

    void OnItem(TableItem<Employee> tableItem)
    {
        if (tableItem.Flag == TableItemFlag.Clicked)
            navigationManager.NavigateTo($"/form2?id={tableItem.Item.Id}");
    }
}