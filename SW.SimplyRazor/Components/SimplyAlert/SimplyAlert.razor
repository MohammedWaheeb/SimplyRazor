@namespace SW.SimplyRazor
@implements IDisposable
@inject IJSRuntime JSRuntime

<div class="alert @alertCss fade show" role="alert">
    @((MarkupString)Body)
    <button type="button" class="close" @onclick="CloseAlert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

@code {

    string alertCss;
    System.Timers.Timer countdown;

    [CascadingParameter(Name = "AlertHub")]
    public ISimplyAlertHub AlertHub { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Body { get; set; }

    [Parameter]
    public AttentionLevel Level { get; set; }

    protected override void OnInitialized()
    {

        switch (Level)
        {
            case AttentionLevel.Error:
                alertCss = "alert-danger";
                break;

            case AttentionLevel.Warning:
                alertCss = "alert-warning";
                break;

            case AttentionLevel.Success:
                alertCss = "alert-success";
                break;

            case 0:
                alertCss = "alert-info";
                break;
        }

        countdown = new System.Timers.Timer(TimeSpan.FromSeconds(5).TotalMilliseconds);
        countdown.Elapsed += async (s, e) => await OnDue();
        countdown.AutoReset = false;
        countdown.Start();
    }

    async Task OnDue()
    {
        await InvokeAsync(() => AlertHub.RemoveAlert(Id));
    }

    void CloseAlert(EventArgs args)
    {
        countdown.Stop();
        AlertHub.RemoveAlert(Id);
    }

    void IDisposable.Dispose()
    {
        countdown?.Dispose();
    }

}
