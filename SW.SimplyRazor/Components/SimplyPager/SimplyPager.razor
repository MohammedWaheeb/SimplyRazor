@namespace SW.SimplyRazor

@if (Count == PageSize || TotalCount > PageSize)
{
    <ul class="pagination">
        <li class="page-item @(Page <= 0 ? "disabled" : null)" @onclick="e=> ChangePage(0)">
            <span class="page-link" style="cursor:pointer ">First</span>
        </li>
        <li class="page-item @(Page <= 0 ? "disabled" : null)" @onclick="e=> ChangePage(Page - 1)">
            <span class="page-link" style="cursor:pointer ">Previous</span>
        </li>
        <li class="page-item @(Count < PageSize || totalPages == Page + 1 ? "disabled" : null)" @onclick="e=> ChangePage(Page + 1)">
            <span class="page-link" style="cursor:pointer ">Next</span>
        </li>
        <li class="page-item @(totalPages == 0 || totalPages == Page + 1  ? "disabled" : null)" @onclick="e=> ChangePage(totalPages-1)">
            <span class="page-link" style="cursor:pointer ">
                Last
                @if (TotalCount > 0)
                {
                    <span class="badge badge-pill badge-primary">@TotalCount</span>
                }
            </span>
        </li>
    </ul>
}

@code {

    [Parameter]
    public int Page { get; set; }

    [Parameter]
    public EventCallback<int> PageChanged { get; set; }

    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public int TotalCount { get; set; }

    [Parameter]
    public int Count { get; set; }

    int totalPages => PageSize == 0 ? 0 : (int)Math.Ceiling(decimal.Divide(TotalCount, PageSize));

    async Task ChangePage(int page)
    {
        await PageChanged.InvokeAsync(page);
    }

}
